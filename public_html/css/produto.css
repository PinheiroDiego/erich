/* Pessoal, esse css foi desenvolvido com conceitos de mobile-first (Primeiro mobile), que iriamos ver na próxima aula e, por questão dos prazos, teremos que adiar para
o próximo semestre. Então, ela mostra o desenvolvento do CSS primeiro para mobile e depois para telas maiores */

/* Primeiro, vamos desenhar as bolinhas coloridas com pseudo-elementos do CSS3 usando um truque com bordas redondas grandes: */

.cores label:after {
  content: '';  
  display: block;
  border-radius: 50%;
  width: 50px;
  height: 50px;
}

figure {
  text-align: center;
  padding: 15px;
  margin: 30px;
}

figcaption {
  font-style: italic;
  margin-top: 10px;
}

label[for=verde]:after {
  background-color: #33CC66;
}

label[for=rosa]:after {
  background-color: #FF6666;
}

label[for=azul]:after {
  background-color: #6666FF;
}

/* Próximo passo é estilizar a bolinha atualmente selecionada usando pseudo-classe :checked: */

.cores input:checked + label:after {
  border: 6px solid rgba(0,0,0,0.3);
}

/* Repare como a borda da bolinha selecionada aumenta o tamanho total da bolinha por causa do box model padrão. Uma solução é trocar o box model com a propriedade 
box-sizing: */

.cores label:after {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* Agora que temos as bolinhas coloridas visuais configuradas, a bolinha do input radio é desnecessária. Esconda-a: */

.cores input[type=radio] {
  display: none;
}

/* Pra fechar a funcionalidade de escolha das cores, falta apenas exibir apenas a imagem atualmente selecionada. Outra forma de falar isso é que devemos esconder as 
imagens dos radios não selecionados. Podemos usar um seletor avançado para isso: */

.cores input:not(:checked) + label img {
  display: none;
}

/* Com a troca de imagens funcionando, vamos implementar o posicionamento correto das bolinhas lado a lado. Para isso, use position:absolute já que seus tamanhos são 
conhecidos: */

.cores label:after {
  position: absolute;
}

/* As bolinhas vão ser posicionadas com relação ao fieldset cores, então ele precisa estar posicionado. O padding superior é para abrir espaço para as bolinhas: */

.cores {
  position: relative;
  padding-top: 90px;
}

/* Cada bolinha é um label:after, basta posicioná-las absolutamente:*/

.cores label:after {
  position: absolute;
  top: 30px;
}

/* As bolinhas ficaram sobrepostas na esquerda. Para corrigir, basta colocar uma coordenada left diferente para cada uma: */

label[for=verde]:after {
  left: 0;
}

label[for=rosa]:after {
  left: 60px;
}

label[for=azul]:after {
  left: 120px;
}

/* Se você testar a página do jeito que ela está agora no Chrome e no Firefox, você verá uma diferença no posicionamento das bolinhas. No Firefox, elas ficarão mais 
para baixo do que no Chrome. Isso acontece porque o Firefox dá um tratamento especial para as tags  <fieldset> e <legend>. No caso, o elemento <legend> não é 
considerado pelo Firefox como parte do fieldset e, assim, o padding que colocamos fica muito grande nesse navegador.
Uma forma de resolver esse problema é deixar o <legend> posicionado absolutamente: */

.cores legend {
  position: absolute;
  top: 0;
  left: 0;
}

/* Um ponto importante de uma solução responsiva é que as imagens se adaptem ao tamanho da tela. Às vezes, usamos imagens maiores e, quando a tela é pequena, a imagem 
fica "vazando" para fora do elemento pai. 
Uma forma de corrigir esse problema é garantir que ela nunca passe o tamanho do pai com max-width: */

.cores label img {
  display: block;
  max-width: 100%;
}

/* Com toda a parte funcional e de posicionamento pronta, vamos estilizar alguns detalhes visuais da página. Primeiro, detalhes de tipografia e espaçamento para toda
página de produtos: */

.produto {
  color: #333;
  line-height: 1.3;
  margin-top: 2em;
}

/* O nome do produto e seu preço também ganham estilo: */

.produto h1 {
  font-size: 1.8em;
  font-weight: bold;
}

.produto p {
  font-size: 1.2em;
  font-style: italic;
  margin-bottom: 1em;
}

/* O <legend> ganha um destaque:*/

.produto legend {
  display: block;
  font: bold 0.9em/2.5 Arial;
  text-transform: uppercase;
}

/* E por fim, o botão de comprar deve ficar em evidência: */

.comprar {
  background: #91bd3c;
  border: none;
  color: #333;
  font-size: 1.4em;
  text-transform: uppercase;
  box-shadow: 0 1px 3px #777;
  display: block;
  padding: 0.5em 1em;
  margin: 1em 0;
}

/* Quando selecionamos a bolinha, uma borda escura aparece. Use transition para fazer a borda aparecer suavemente, como um fadein. */

.cores label:after {
  border: 6px solid rgba(0,0,0,0);
  transition: 1s;
}

/* E podemos adicionar também um estilo para quando passar o mouse em cima da bolinha, como mostrar uma borda mais leve. */

.cores label:hover:after {
  border: 6px solid rgba(0,0,0,0.1);
}

/* Todo o CSS a seguir estará destino para telas maiores. Na versão desktop, queremos reposicionar as coisas em duas colunas. Vamos colocar a foto do produtos à esquerda 
posicionada em relação ao produto. Isso vai afetar o posicionamento das bolinhas então vamos trocar para posicioná-las com float simples. */

.produto {
  /* a foto vai se posicionar absolutamente com relação a esse elemento, por isso preciso estar posicionado */
  position: relative; 
  /* deixo 40% de espaço em branco na esquerda para foto ocupar */
  padding-left: 40%;
}

.cores {
  /* isso era relative antes; reinicio para static para evitar que a foto se posicione com relação a mim. */
  position: static;
  /* reinicio meu padding-top que tinha antes e não preciso mais */
  padding: 0;
}

.cores legend {
  /* eu era absolute antes, para ter o mesmo comportamento no Chrome e no Firefox; agora quero voltar ao fluxo da página */
  position: static;
}

.cores label img {
  /* imagem se posiciona absolutamente à esquerda com relação ao .produto */
  position: absolute;
  top: 0;
  left: 0;
}

.cores label:after {
  /* as bolinhas coloridas tinham posição absoluta. não precisamos mais, basta flutuar uma do lado da outra */
  position: static;
  float: left;
}

/* Teste a página e veja que a imagem deixa a desejar, pois ainda não está posicionada corretamente. Apesar disso, o restante já começa a ficar no lugar.
Primeiro, para evitar que a imagem vaze para fora do espaço que lhe foi determinado, vamos usar as propriedades max-width e max-height: */

.cores label img {
  max-width: 35%;
  max-height: 100%;
}

/* Podemos aumentar um pouco o tamanho das fontes usadas no produto. Como usamos em antes, basta aumentar a fonte do elemento pai, o produto e tudo escala 
proporcionalmente.*/

.produto {
  font-size: 1.2em;
}

/* Último ajuste é uma pequena margem entre as bolinhas coloridas: */

.cores label:after {
  margin-right: 10px;
}

/* Temos dois fieldsets, um para escolher cor e outro, tamanho. No mobile, eles ficam um em cima do outro. No desktop, podemos posicioná-los lado a lado.
Dentro da media query anterior, acrescente: */

fieldset {
  display: inline-block;
  vertical-align: top;
  margin: 1em 0;
  min-width: 200px;
  width: 45%;
}

/* O estilo é bastante simples, apenas para deixar o texto mais bonito. */

.detalhes {
  padding: 2em 0;
}

.detalhes h2 {
  font-size: 1.5em;
  line-height: 2;
}

.detalhes p {
  margin: 1em 0;
  font-size: 1em;
  line-height: 1.5;
}

.detalhes {
  font-size: 1.2em;
}

/* Estilize a tabela para deixá-la mais agradável. Use o seletor de filhos múltiplos para um estilo zebrado. */

table {
  border-spacing: 0.2em;
  border-collapse: separate;
}

thead {
  background-color: #999;
}

thead th {
  font-weight: bold;
  padding: 0.3em 1em;
  text-align: center;
}

td {
  padding: 0.3em;
}

tr:nth-child(2n) {
  background-color: #ccc;
}

td:first-child {
  font-style: italic;
}

.cores label img {
  border: 2px solid #ccc;
}

p {
  text-align: justify;
}

.tamanhos output {
  display: inline-block;
  height: 44px;
  width: 44px;

  line-height: 44px;
  text-align: center;

  border: 3px solid #666;
  border-radius: 50%;
  color: #555;
}